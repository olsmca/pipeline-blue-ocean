buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}", 'org.ajoberstar:gradle-git:0.8.0')
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.smith'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

/* Jacoco */
jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/reporte-jacoco")
}

test {
    jacoco {
        append = true
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
    }
}

import org.ajoberstar.grgit.*

bootJar {
    archiveName = "procesadorfactura.jar"
    def repo = Grgit.open(project.file('.'))

    manifest {
        attributes("Built-By": System.getProperty("user.name"))
        attributes("Specification-Title": "test jenkinsfile with blue ocean in springboot project",
                "Specification-Version": version,
                "Implementation-Title": project.name,
                "Implementation-Version": 1,
                "Implementation-Vendor": "Sura",
                "Implementation-Description": project.description,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Git-Commit": repo.head().getAbbreviatedId(8),
                "Git-Branch": repo.branch.getCurrent().getName())
    }
}

test.finalizedBy jacocoTestReport